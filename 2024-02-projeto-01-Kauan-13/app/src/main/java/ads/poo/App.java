/*
 * This source file was generated by the Gradle 'init' task
 */
package ads.poo;

import edu.princeton.cs.algs4.Draw;

import java.util.Locale;
import java.util.Scanner;

public class App {
    private final Jogo jogo;
    private final Draw draw;
    private Scanner leitor;

    public App(String nome) {
        this.draw = new Draw();
        this.draw.setTitle("Batalha Naval");
        this.draw.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        this.draw.setCanvasSize(1000, 600);
        this.draw.setXscale(0, 1000);
        this.draw.setYscale(0, 600);
        this.jogo = new Jogo(nome, this.draw);
        leitor = new Scanner(System.in);
    }

    private void menu() {

        do{
            switch (this.jogo.getStatus()){
                case 1 -> {
                    this.addNavios();
                    this.jogo.setStatus(2);
                }
                case 2 -> {
                    if(this.jogo.getNavioJogador().isEmpty() || this.jogo.getNavioBot().isEmpty()){
                        this.jogo.setStatus(3);
                        break;
                    }
                    this.addTiros();
                }
                case 3 -> {
                    if(this.jogo.getNavioBot().isEmpty()){
                        System.out.println("Jogador Venceu!");
                        this.jogo.addJogadorVitoria();
                        this.jogo.setStatus(4);
                    }else{
                        System.out.println("Bot Venceu!");
                        this.jogo.addBotVitoria();
                        this.jogo.setStatus(4);
                    }
                }
                case 4 -> {
                    String opcao;
                    do {
                        System.out.print("Deseja Continuar Jogando? (s/n):");
                        opcao = leitor.next().toUpperCase();

                        if(opcao.equals("S")){
                            this.jogo.reiniciarJogo(this.draw);
                            jogo.setStatus(1);
                        }else if(opcao.equals("N")){
                            System.out.println(this.jogo);
                            jogo.setStatus(0);
                        }
                    }while (!opcao.equals("S") && !opcao.equals("N"));
                }
            }
        }while (this.jogo.getStatus() != 0);
        System.out.println("\nJogo finalizado...");
        this.leitor.close();
    }

    private void addNavios() {
        char[] frota = {'P','E','C','S','N'};
        String[] nomesNavios = {"Porta Aviões","Encouraçado","Cruzador","Submarino","Contratorpedeiro"};
        boolean isAddNavio;
        boolean isAddNavioBot;
        boolean isValorValido;

        for (int i = 0; i < frota.length; i++) {
            do {
                String posicao;

                isValorValido = false;
                isAddNavio = false;

                System.out.println("Posicione o " + nomesNavios[i]);
                posicao = leitor.next().toUpperCase();

                if (this.jogo.isValorValido(posicao)){
                    isValorValido = true;
                    String[] posicoes = posicao.split("");
                    boolean vertical = posicoes[2].equals("V");
                    if(this.jogo.isPosicaoPossivel(Integer.parseInt(posicoes[1]),posicoes[0].charAt(0),frota[i],vertical,this.jogo.getGradeJogador())){
                        if(this.jogo.isPosicaoLivre(this.jogo.getNavioJogador(),Integer.parseInt(posicoes[1]),posicoes[0].charAt(0),frota[i],vertical,this.jogo.getGradeJogador())){
                            isAddNavio = this.jogo.adicionarNavio(Integer.parseInt(posicoes[1]),posicoes[0].charAt(0),frota[i],vertical,this.jogo.getGradeJogador(),this.draw);
                        }else{
                            System.out.println(this.mensagens(1));
                        }
                    }else{
                        System.out.println(this.mensagens(2));
                    }
                }else{
                    System.out.println(this.mensagens(0));
                }
            }while (!isValorValido || !isAddNavio);

            do {
                isAddNavioBot = this.jogo.adicionarNavio(frota[i],this.jogo.getGradeBot());
            }while (!isAddNavioBot);
        }
    }

    private void addTiros() {
        if(this.jogo.isComeca()){
            this.addTiroJogador();
            this.addTiroBot();
        }else{
            this.addTiroBot();
            this.addTiroJogador();
        }
    }

    private void addTiroJogador() {
        boolean isValorValido;
        boolean isAddTiro;
        do {
            String posicao;
            isValorValido = false;
            isAddTiro = false;

            System.out.println("Selecione Posição de Tiro: ");
            posicao = this.leitor.next().toUpperCase();

            if(this.jogo.isTiroValorValido(posicao)) {
                isValorValido = true;
                String[] posicoes = posicao.split("");
                if(this.jogo.isTiroPosicaoLivre(this.jogo.getTiroJogador(),Integer.parseInt(posicoes[1]),posicoes[0].charAt(0))){
                    if(this.jogo.isTiroAcertou(this.jogo.getNavioBot(),Integer.parseInt(posicoes[1]),posicoes[0].charAt(0))){
                        isAddTiro = this.jogo.atirar(Integer.parseInt(posicoes[1]),posicoes[0].charAt(0),true,this.jogo.getGradeBot(),this.draw);
                        System.out.println(this.jogo.getNomeJogador() + ": " + mensagens(3));
                        if(this.jogo.isNavioAfundou(this.jogo.getNavioBot())) {
                            System.out.println(this.jogo.getNomeJogador() + ": " + this.mensagens(5));
                        }
                    }else{
                        isAddTiro = this.jogo.atirar(Integer.parseInt(posicoes[1]),posicoes[0].charAt(0),false,this.jogo.getGradeBot(),this.draw);
                        System.out.println(this.jogo.getNomeJogador() + ": " + mensagens(4));
                    }
                }else{
                    System.out.println(this.jogo.getNomeJogador() + ": " + mensagens(6));
                }
            }else{
                System.out.println(this.jogo.getNomeJogador() + ": " + this.mensagens(0));
            }
        }while (!isValorValido || !isAddTiro);
    }

    private void addTiroBot() {
        if(this.jogo.atirar(this.jogo.getGradeJogador(),this.draw)){
            System.out.println("Bot: " + mensagens(3));
            if(this.jogo.isNavioAfundou(this.jogo.getNavioJogador())) {
                System.out.println("Bot: " + this.mensagens(5));
            }
        }else{
            System.out.println("Bot: " + mensagens(4));
        }
    }
    private String mensagens(int index) {
        String[] mensagens = {
                "Valores Incorretos!",
                "Sobreposição de Navios",
                "Não foi possível encaixar o Navio",
                "O tiro acertou um navio",
                "Tiro na água",
                "Navio afundado",
                "Esse local já foi escolhido"};

        return mensagens[index];
    }

    public static void main(String[] args) {
        Scanner leitor = new Scanner(System.in);
        System.out.println("Digite seu nome: ");
        String nome = leitor.next();

        App app = new App(nome);
        app.menu();
    }
}
